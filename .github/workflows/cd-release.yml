name: CD Pipeline

permissions:
  contents: write
  issues: write

on:
  push:
    branches: [ main, master ]

jobs:
  semver:
    uses: woped/devops/.github/workflows/semver-and-release-notes.yaml@main

  approval:
    uses: woped/devops/.github/workflows/manual-approval.yaml@main
    needs: semver
    with:
      VERSION: ${{ needs.semver.outputs.VERSION }}

  # Linux Installer
  build-linux-installer:
    name: Build Installer on Linux
    # run only if a new version is detected
    if: ${{ needs.semver.outputs.VERSION != '' && needs.semver.outputs.VERSION != '0.0.0' }}
    runs-on: ubuntu-latest
    needs: [ semver, approval ]
    permissions: write-all
    env:
      RELEASE_VERSION: ${{ needs.semver.outputs.VERSION }}
    steps:
      # Setup build environment
    - id: checkout-code
      name: Checkout
      uses: actions/checkout@v4
    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        settings-path: ${{ github.workspace }}
    - uses: s4u/maven-settings-action@v2.5.0
      with:
        servers: '[{"id": "github","configuration": {"httpHeaders": {"property": {"name": "Authorization","value": "Bearer ${{ secrets.GITHUB_TOKEN }}"}}}}]'
      # Build for linux
    - id: build
      name: Build for linux
      run: |
        mvn -U -pl !WoPeD-Installer clean install -Dmaven.test.skip=true -Drevision=$RELEASE_VERSION --no-transfer-progress
        jpackage --input /home/runner/work/WoPeD/WoPeD --name WoPeD --main-jar /home/runner/work/WoPeD/WoPeD/WoPeD-Starter/target/WoPeD-Starter-$RELEASE_VERSION.jar --main-class org.woped.starter.RunWoPeD --dest ./woped-installer/build/distributions
        ls ./woped-installer/build/distributions
    - name: Rename artefact
      run: |
        mv woped-installer/build/distributions/woped_*.deb \
        woped-installer/build/distributions/WoPeD-$RELEASE_VERSION.deb
      # Upload installer
    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        path: ./woped-installer/build/distributions/WoPeD-${{ env.RELEASE_VERSION }}.deb
        name: linux-installer
        retention-days: 1

  # Windows Installer
  build-windows-installer:
    name: Build Installer on Windows
    # run only if a new version is detected
    if: ${{ needs.semver.outputs.VERSION != '' && needs.semver.outputs.VERSION != '0.0.0' }}
    runs-on: windows-latest
    needs: [ semver, approval ]
    env:
      RELEASE_VERSION: ${{ needs.semver.outputs.VERSION }}
    steps:
      # Setup build environment
    - id: checkout-code
      name: Checkout
      uses: actions/checkout@v4
    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        settings-path: ${{ github.workspace }}
    - uses: s4u/maven-settings-action@v2.5.0
      with:
        servers: '[{"id": "github","configuration": {"httpHeaders": {"property": {"name": "Authorization","value": "Bearer ${{ secrets.GITHUB_TOKEN }}"}}}}]'
      # Build for Windows
    - id: build
      name: Build for Windows
      run: |
        mvn -U -pl !WoPeD-Installer clean install "-Dmaven.test.skip=true" "-Drevision=$env:RELEASE_VERSION" --no-transfer-progress
        jpackage --input C:\Users\runneradmin\.m2\repository\de\dhbw\woped --name WoPeD --app-version $env:RELEASE_VERSION --main-jar C:\Users\runneradmin\.m2\repository\de\dhbw\woped\WoPeD-Starter\$env:RELEASE_VERSION\WoPeD-Starter-$env:RELEASE_VERSION.jar --main-class org.woped.starter.RunWoPeD --dest C:\ --type msi
        dir C:\
      # Upload installer
    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        path: C:\WoPeD-${{ env.RELEASE_VERSION }}.msi
        name: windows-installer
        retention-days: 1

  # MacOS Installer
  build-macos-installer:
    name: Build Installer on macOS
    # run only if a new version is detected
    if: ${{ needs.semver.outputs.VERSION != '' && needs.semver.outputs.VERSION != '0.0.0' }}
    runs-on: macos-latest
    needs: [ semver, approval ]
    env:
      RELEASE_VERSION: ${{ needs.semver.outputs.VERSION }}
    steps:
      # Setup build environment
    - id: checkout-code
      name: Checkout
      uses: actions/checkout@v4
    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        settings-path: ${{ github.workspace }}
    - uses: s4u/maven-settings-action@v2.5.0
      with:
        servers: '[{"id": "github","configuration": {"httpHeaders": {"property": {"name": "Authorization","value": "Bearer ${{ secrets.GITHUB_TOKEN }}"}}}}]'
      # Build for MacOS
    - id: build
      name: Build for MacOS
      run: |
        mvn -U -pl !WoPeD-Installer clean install -Dmaven.test.skip=true -Drevision=$RELEASE_VERSION --no-transfer-progress
        jpackage --input /Users/runner/.m2/repository/de/dhbw/woped/ --name WoPeD --app-version $RELEASE_VERSION --main-jar /Users/runner/.m2/repository/de/dhbw/woped/WoPeD-Starter/$RELEASE_VERSION/WoPeD-Starter-$RELEASE_VERSION.jar --main-class org.woped.starter.RunWoPeD --dest /Users/runner/.m2/ --type dmg
      # Upload Installer
    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        path: /Users/runner/.m2/WoPeD-${{ env.RELEASE_VERSION }}.dmg
        name: macos-installer
        retention-days: 1

  create-release:
    uses: woped/devops/.github/workflows/github-release.yaml@main
    needs: [ semver, build-linux-installer, build-windows-installer, build-macos-installer ]
    with:
      VERSION: ${{ needs.semver.outputs.VERSION }}
      RELEASE_NOTES: ${{ needs.semver.outputs.RELEASE_NOTES }}

  upload-release-assets:
    name: Upload Release Assets
    runs-on: ubuntu-latest
    needs: [ semver, create-release ]
    env:
      RELEASE_VERSION: ${{ needs.semver.outputs.VERSION }}
    steps:
    - uses: actions/checkout@v4
      # Download installers
    - id: download-linux-installer
      name: Download Linux installer
      uses: actions/download-artifact@v4
      with:
        name: linux-installer
    - id: download-windows-installer
      name: Download Windows installer
      uses: actions/download-artifact@v4
      with:
        name: windows-installer
    - id: download-macos-installer
      name: Download macOS installer
      uses: actions/download-artifact@v4
      with:
        name: macos-installer
      # Upload assets
    - id: release-linux-installer
      name: Release Linux installer
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.UPLOAD_URL }}
        asset_path: WoPeD-${{ env.RELEASE_VERSION }}.deb
        asset_name: WoPeD-${{ env.RELEASE_VERSION }}.deb
        asset_content_type: application/x-binary
    - id: release-windows-installer
      name: Release Windows installer
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.UPLOAD_URL }}
        asset_path: WoPeD-${{ env.RELEASE_VERSION }}.msi
        asset_name: WoPeD-${{ env.RELEASE_VERSION }}.msi
        asset_content_type: application/x-binary
    - id: release-macos-installer
      name: Release macOS installer
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.UPLOAD_URL }}
        asset_path: WoPeD-${{ env.RELEASE_VERSION }}.dmg
        asset_name: WoPeD-${{ env.RELEASE_VERSION }}.dmg
        asset_content_type: application/x-binary
